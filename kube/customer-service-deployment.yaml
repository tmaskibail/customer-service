apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: customer-service-deployment
    tier: backend
  name: customer-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      name: customer-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: customer-service
    spec:
      containers:
        - image: urthilak/customer-service:6
          name: customer-service
          ports:
            - containerPort: 8080
              name: service-port
          volumeMounts:
            - name: logs-storage
              mountPath: /app/logs
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /actuator/info
              port: service-port
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/info
              port: service-port
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
            - name: SECRETS_DEMO_USER
              valueFrom:
                secretKeyRef:
                  name: customer-service-security
                  key: spring.user.name
            - name: SECRETS_DEMO_USER_PASSWD
              valueFrom:
                secretKeyRef:
                  name: customer-service-security
                  key: spring.user.password
            - name: LOG_DIR
              valueFrom:
                configMapKeyRef:
                 name: customer-service-configmap
                 key: LOG_DIR
      volumes:
        - name: logs-storage
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
status: {}