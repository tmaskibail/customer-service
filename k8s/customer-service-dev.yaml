apiVersion: v1
kind: Namespace
metadata:
  name: dev
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Service
metadata:
  name: customer-service
  namespace: dev
spec:
  type: NodePort
  ports:
    - nodePort: 31844
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    name: customer-service
---
apiVersion: v1
data:
  spring.user.name: ZGVtbw==
  spring.user.password: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: customer-service-security
  namespace: dev
type: Opaque
---
apiVersion: v1
data:
  LOG_DIR: /app/logs
kind: ConfigMap
metadata:
  name: customer-service-configmap
  namespace: dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: customer-service-deployment
    tier: backend
  name: customer-service-deployment
  namespace: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      name: customer-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: customer-service
    spec:
      containers:
        - image: gcr.io/dev-env-274010/customer-service:latest
          name: customer-service
          ports:
            - containerPort: 8080
              name: service-port
          volumeMounts:
            - name: logs-storage
              mountPath: /app/logs
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /actuator/info
              port: service-port
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/info
              port: service-port
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
            - name: SECRETS_DEMO_USER
              valueFrom:
                secretKeyRef:
                  name: customer-service-security
                  key: spring.user.name
            - name: SECRETS_DEMO_USER_PASSWD
              valueFrom:
                secretKeyRef:
                  name: customer-service-security
                  key: spring.user.password
            - name: LOG_DIR
              valueFrom:
                configMapKeyRef:
                  name: customer-service-configmap
                  key: LOG_DIR
      volumes:
        - name: logs-storage
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
status: {}
---
